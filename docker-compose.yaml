services:
  database:
    container_name: database
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: "directory_service"
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - database
  seq:
    container_name: seq
    image: datalust/seq
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORD=admin
    ports:
      - "5341:5341"
      - "8081:80"
    volumes:
      - seq-data:/data
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
  ds-api:
    build:
      context: ./DirectoryService
      dockerfile: src/DirectoryService.WebAPI/Dockerfile
      args:
        GITHUB_USER: ${GITHUB_USER}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: ds-api
    ports:
      - "5000:8080"
    depends_on:
      - database
      - seq
      - redis
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "DOTNET_RUNNING_IN_CONTAINER=true"
      - "DOTNET_USE_POLLING_FILE_WATCHER=true"
      - "ConnectionStrings__Postgres=Host=database;Port=5432;Username=postgres;Password=postgres;Database=directory_service"
      - "ConnectionStrings__Redis=redis"
    env_file:
      - .env
  fs-api:
    build:
      context: ./FileService
      dockerfile: src/FileService/Dockerfile
      args:
        GITHUB_USER: ${GITHUB_USER}
        GITHUB_TOKEN: ${GITHUB_TOKEN}  
    container_name: fs-api
    ports:
      - "5001:8080"
    depends_on:
      - seq
      - minio
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "DOTNET_RUNNING_IN_CONTAINER=true"
      - "DOTNET_USE_POLLING_FILE_WATCHER=true"
      - "ConnectionStrings__Minio=minio:9000"
    env_file:
      - .env
  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
volumes:
  postgres_data:
  seq-data:
  redis_data:
  minio_data: